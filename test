from transformers import MBartForConditionalGeneration, MBart50TokenizerFast

def translate_text(article, source_lang, target_lang):
    """
    Traduit un texte d'une langue source à une langue cible en utilisant mBART-50.

    Args:
    - article (str): Le texte à traduire.
    - source_lang (str): Code de la langue source (ex: 'fr_XX').
    - target_lang (str): Code de la langue cible (ex: 'en_XX').

    Returns:
    - str: Le texte traduit.
    """
    # Charger le modèle et le tokenizer
    model = MBartForConditionalGeneration.from_pretrained("facebook/mbart-large-50-many-to-many-mmt")
    tokenizer = MBart50TokenizerFast.from_pretrained("facebook/mbart-large-50-many-to-many-mmt")

    # Configurer la langue source
    tokenizer.src_lang = source_lang

    # Encoder l'article
    encoded_input = tokenizer(article, return_tensors="pt")

    # Générer la traduction
    generated_tokens = model.generate(
        **encoded_input,
        forced_bos_token_id=tokenizer.lang_code_to_id[target_lang]
    )

    # Décoder et retourner la traduction
    translated_text = tokenizer.batch_decode(generated_tokens, skip_special_tokens=True)[0]
    return translated_text

if _name_ == "_main_":
    # Exemple de texte à traduire
    text_hi = "संयुक्त राष्ट्र के प्रमुख का कहना है कि सीरिया में कोई सैन्य समाधान नहीं है"
    text_ar = "الأمين العام للأمم المتحدة يقول إنه لا يوجد حل عسكري في سوريا."

    # Traduction de l'hindi au français
    translation_hi_to_fr = translate_text(text_hi, "hi_IN", "fr_XX")
    print(f"Traduction de l'hindi au français : {translation_hi_to_fr}")

    # Traduction de l'arabe à l'anglais
    translation_ar_to_en = translate_text(text_ar, "ar_AR", "en_XX")
    print(f"Traduction de l'arabe à l'anglais : {translation_ar_to_en}")
